<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
       引入类型的自动注入：spring框架根据某些规则可以给引用类型赋值
       使用规则常用的是byName,byType
       1.byName(按名称注入) : java类中的引用类型和spring容器中(配置文件)<bean>的id名称一样，
         且数据类型是一致的，这样的容器中的bean，spring能够复制给引用类型
       语法：
        <bean id="xxx" class="yyy" autowire="byName">
           简单类型赋值
        </bean>

       2.byType(按类型注入): java类中引用类型的数据类型和spring容器中(配置文件)<bean>的
       class属性是同源关系，这样的bean能够赋值给引用类型
       同源就是一类的意思：
        1.java类中引用类型的数据类型和bean 的class的值是一样的
        2.java类中引用类型和bean的class的值父子类关系的
        3.java类中引用类型的数据类型和bean的class的值接口和实现类关系的
        语法：
           <bean id="xxx" class="yyy" autowire="byType">
           简单类型赋值
        </bean>

        注意：在byType中，在xml配置文件中声明bean只能有一个符合条件的，
             多于一个是错误的
     -->


    <bean id="myStudent" class="org.example.di04.Student" autowire="byName">
        <property name="name" value="张三"/>
        <property name="age" value="30"/>
<!--        <constructor-arg name="" ref="mySchool"/>-->
    </bean>
     <!-- 声明School对象 -->

    <bean id="school" class="org.example.di04.School">
        <property name="name" value="浙江大学" />
        <property name="address" value="杭州西湖" />
    </bean>

</beans>